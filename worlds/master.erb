
<%
# Default parameters.
def default()
  $num_robots = 10
  if !ENV['erb_num_robots'].nil?
    $num_robots = ENV['erb_num_robots'].to_i
  end

  $ground_count = $num_robots
  $fixed_count = 0#$num_robots
  $rotor_count = 0#$num_robots

  # Camera with 20mm focal length projected onto 35mm film has a field
  # of view of 1.4656 radians (~84 degrees).
  $camera_near_rotor = 0.1
  $camera_far_rotor = 50
  $camera_fov_rotor = 1.4656
  $camera_aspect_ratio_rotor = 1.778

  # Camera with 50mm focal length projected onto 35mm film has a field
  # of view of 0.6911 radians (~40 degrees).
  $camera_near_ground = 0.1
  $camera_far_ground = 100
  $camera_fov_ground = 0.6911
  $camera_aspect_ratio_ground = 1.778

  # Camera with 200mm focal length projected onto 35mm film has a field
  # of view of 0.1795 radians (~10 degrees).
  $camera_near_fixed = 0.1
  $camera_far_fixed = 200
  $camera_fov_fixed = 0.1795
  $camera_aspect_ratio_fixed = 1.778

  $lost_person_x = 750
  $lost_person_y = 750
  $latitude_deg = 35.7753257
  $longitude_deg = -120.774063
  $elevation = 208

  # Search area (2km x 2km)
  $min_relative_latitude_deg = -0.01
  $max_relative_latitude_deg = 0.01
  $min_relative_longitude_deg = -0.01
  $max_relative_longitude_deg = 0.01
  $search_area = '2 x 2 km'

  # Terrain and environment
  $terrain_file = ''
  $vegetation_file = ''

  # Comms model parameters
  $neighbor_distance_min = 0.0
  $neighbor_distance_max = 250.0
  $neighbor_distance_penalty_tree = 200.0
  $comms_distance_min = 0.0
  $comms_distance_max = 250.0
  $comms_distance_penalty_tree = 200.0
  $comms_drop_probability_min = 0.0
  $comms_drop_probability_max = 0.05
  $comms_outage_probability = 0.1
  $comms_outage_duration_min = 1.0
  $comms_outage_duration_max = 2.0
  $comms_data_rate_max = 54000000

  # Scoring
  $max_time_allowed = 1200.0
  $max_wrong_reports = 20

  # Physics
  $max_step_size = 0.1
end

# complete.world
def complete()
  # Load default parameters.
  default()

  $terrain_file = 'terrain_model_1.sdf.erb'
  $vegetation_file = 'vegetation_01.sdf.erb'
end

# final_01_02_low.world
def final_01_02_low()
  # Load default parameters.
  default()

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_low.sdf.erb'
end

# final_01_02_medium.world
def final_01_02_medium()
  # Load default parameters.
  default()

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_med.sdf.erb'
end

# final_01_02_high.world
def final_01_02_high()
  # Load default parameters.
  default()

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_high.sdf.erb'
end

# final_01_10_low.world
def final_01_10_low()
  # Load default parameters.
  default()

  # Search area (10km x 10km)
  $min_relative_latitude_deg = -0.05
  $max_relative_latitude_deg = 0.05
  $min_relative_longitude_deg = -0.05
  $max_relative_longitude_deg = 0.05
  $search_area = '10 x 10 km'

  $lost_person_x = 3500
  $lost_person_y = 3500

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_low.sdf.erb'

  $max_time_allowed = 2400.0
end

# final_01_10_medium.world
def final_01_10_medium()
  # Load default parameters.
  default()

  # Search area (10km x 10km)
  $min_relative_latitude_deg = -0.05
  $max_relative_latitude_deg = 0.05
  $min_relative_longitude_deg = -0.05
  $max_relative_longitude_deg = 0.05
  $search_area = '10 x 10 km'

  $lost_person_x = 3500
  $lost_person_y = 3500

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_med.sdf.erb'

  $max_time_allowed = 2400.0
end

# final_01_10_high.world
def final_01_10_high()
  # Load default parameters.
  default()

  # Search area (10km x 10km)
  $min_relative_latitude_deg = -0.05
  $max_relative_latitude_deg = 0.05
  $min_relative_longitude_deg = -0.05
  $max_relative_longitude_deg = 0.05
  $search_area = '10 x 10 km'

  $lost_person_x = 3500
  $lost_person_y = 3500

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_high.sdf.erb'

  $max_time_allowed = 2400.0
end

# final_01_20_low.world
def final_01_20_low()
  # Load default parameters.
  default()

  # Search area (20km x 20km)
  $min_relative_latitude_deg = -0.1
  $max_relative_latitude_deg = 0.1
  $min_relative_longitude_deg = -0.1
  $max_relative_longitude_deg = 0.1
  $search_area = '20 x 20 km'

  $lost_person_x = 7500
  $lost_person_y = 7500

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_low.sdf.erb'

  $max_time_allowed = 7200.0
end

# final_01_20_medium.world
def final_01_20_medium()
  # Load default parameters.
  default()

  # Search area (20km x 20km)
  $min_relative_latitude_deg = -0.1
  $max_relative_latitude_deg = 0.1
  $min_relative_longitude_deg = -0.1
  $max_relative_longitude_deg = 0.1
  $search_area = '20 x 20 km'

  $lost_person_x = 7500
  $lost_person_y = 7500

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_med.sdf.erb'

  $max_time_allowed = 7200.0
end

# final_01_20_high.world
def final_01_20_high()
  # Load default parameters.
  default()

  # Search area (20km x 20km)
  $min_relative_latitude_deg = -0.1
  $max_relative_latitude_deg = 0.1
  $min_relative_longitude_deg = -0.1
  $max_relative_longitude_deg = 0.1
  $search_area = '20 x 20 km'

  $lost_person_x = 7500
  $lost_person_y = 7500

  $terrain_file = 'terrain_camp_roberts.sdf.erb'
  $vegetation_file = 'vegetation_camp_roberts_high.sdf.erb'

  $max_time_allowed = 7200.0
end

# How to a new world file:
# 1. Create a function that matches the name of your world file
#    without ".world". Modify the default parameters for your new world file.
#    E.g.:
#    def complete()
#      $terrain_file = 'terrain_model_1.sdf.erb'
#    end
#
# 2. Add a new entry to the hash "h", where:
#      - The key should be the complete world file name.
#      - The value should be the function that you created in step (1).
#    E.g.:
#    h["complete.world"] = method(:complete)
#
# 3. Add your new world file to worlds/CMakeLists.txt inside this block:
#       set (generated_master_world_files
#         complete.world
#         <YOUR_NEW_WORLD_FILE>
#       )
#
# We follow the next naming convention:
#   final_<terrain_index>_<search_area>_<vegetation>_<num_vehicles>.world

# Generate a Gazebo world file.
# Params:
# +_world_file+:: World file to be generated.
def generate_worlds(_world_file)

  h = Hash.new
  h["complete.world"] = method(:complete)
  h["final_01_02_low.world"] = method(:final_01_02_low)
  h["final_01_02_medium.world"] = method(:final_01_02_medium)
  h["final_01_02_high.world"] = method(:final_01_02_high)
  h["final_01_10_low.world"] = method(:final_01_10_low)
  h["final_01_10_medium.world"] = method(:final_01_10_medium)
  h["final_01_10_high.world"] = method(:final_01_10_high)
  h["final_01_20_low.world"] = method(:final_01_20_low)
  h["final_01_20_medium.world"] = method(:final_01_20_medium)
  h["final_01_20_high.world"] = method(:final_01_20_high)

  f = h[_world_file]
  f.call
  ERB.new(File.read('template.world.erb'),
          nil, nil, "_world").result(binding)
end
%>

<%=
# We use an environment variable for specifying the world file to generate.
generate_worlds( ENV['erb_gazebo_world_file'] )
%>
